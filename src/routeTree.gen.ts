/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as WeightConversionRouteImport } from './routes/weight-conversion'
import { Route as TimeConversionRouteImport } from './routes/time-conversion'
import { Route as TempraturConversionRouteImport } from './routes/tempratur-conversion'
import { Route as TaxCalculationRouteImport } from './routes/tax-calculation'
import { Route as SpeedConversionRouteImport } from './routes/speed-conversion'
import { Route as ShoeSizeConversionRouteImport } from './routes/shoe-size-conversion'
import { Route as PasswordGeneratorRouteImport } from './routes/password-generator'
import { Route as LengthConversionRouteImport } from './routes/length-conversion'
import { Route as DataStorageConversionRouteImport } from './routes/data-storage-conversion'
import { Route as BmiCalculationRouteImport } from './routes/bmi-calculation'
import { Route as AreaConversionRouteImport } from './routes/area-conversion'
import { Route as AgeAndDateConvertorsRouteImport } from './routes/age-and-date-convertors'
import { Route as IndexRouteImport } from './routes/index'

const WeightConversionRoute = WeightConversionRouteImport.update({
  id: '/weight-conversion',
  path: '/weight-conversion',
  getParentRoute: () => rootRouteImport,
} as any)
const TimeConversionRoute = TimeConversionRouteImport.update({
  id: '/time-conversion',
  path: '/time-conversion',
  getParentRoute: () => rootRouteImport,
} as any)
const TempraturConversionRoute = TempraturConversionRouteImport.update({
  id: '/tempratur-conversion',
  path: '/tempratur-conversion',
  getParentRoute: () => rootRouteImport,
} as any)
const TaxCalculationRoute = TaxCalculationRouteImport.update({
  id: '/tax-calculation',
  path: '/tax-calculation',
  getParentRoute: () => rootRouteImport,
} as any)
const SpeedConversionRoute = SpeedConversionRouteImport.update({
  id: '/speed-conversion',
  path: '/speed-conversion',
  getParentRoute: () => rootRouteImport,
} as any)
const ShoeSizeConversionRoute = ShoeSizeConversionRouteImport.update({
  id: '/shoe-size-conversion',
  path: '/shoe-size-conversion',
  getParentRoute: () => rootRouteImport,
} as any)
const PasswordGeneratorRoute = PasswordGeneratorRouteImport.update({
  id: '/password-generator',
  path: '/password-generator',
  getParentRoute: () => rootRouteImport,
} as any)
const LengthConversionRoute = LengthConversionRouteImport.update({
  id: '/length-conversion',
  path: '/length-conversion',
  getParentRoute: () => rootRouteImport,
} as any)
const DataStorageConversionRoute = DataStorageConversionRouteImport.update({
  id: '/data-storage-conversion',
  path: '/data-storage-conversion',
  getParentRoute: () => rootRouteImport,
} as any)
const BmiCalculationRoute = BmiCalculationRouteImport.update({
  id: '/bmi-calculation',
  path: '/bmi-calculation',
  getParentRoute: () => rootRouteImport,
} as any)
const AreaConversionRoute = AreaConversionRouteImport.update({
  id: '/area-conversion',
  path: '/area-conversion',
  getParentRoute: () => rootRouteImport,
} as any)
const AgeAndDateConvertorsRoute = AgeAndDateConvertorsRouteImport.update({
  id: '/age-and-date-convertors',
  path: '/age-and-date-convertors',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/age-and-date-convertors': typeof AgeAndDateConvertorsRoute
  '/area-conversion': typeof AreaConversionRoute
  '/bmi-calculation': typeof BmiCalculationRoute
  '/data-storage-conversion': typeof DataStorageConversionRoute
  '/length-conversion': typeof LengthConversionRoute
  '/password-generator': typeof PasswordGeneratorRoute
  '/shoe-size-conversion': typeof ShoeSizeConversionRoute
  '/speed-conversion': typeof SpeedConversionRoute
  '/tax-calculation': typeof TaxCalculationRoute
  '/tempratur-conversion': typeof TempraturConversionRoute
  '/time-conversion': typeof TimeConversionRoute
  '/weight-conversion': typeof WeightConversionRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/age-and-date-convertors': typeof AgeAndDateConvertorsRoute
  '/area-conversion': typeof AreaConversionRoute
  '/bmi-calculation': typeof BmiCalculationRoute
  '/data-storage-conversion': typeof DataStorageConversionRoute
  '/length-conversion': typeof LengthConversionRoute
  '/password-generator': typeof PasswordGeneratorRoute
  '/shoe-size-conversion': typeof ShoeSizeConversionRoute
  '/speed-conversion': typeof SpeedConversionRoute
  '/tax-calculation': typeof TaxCalculationRoute
  '/tempratur-conversion': typeof TempraturConversionRoute
  '/time-conversion': typeof TimeConversionRoute
  '/weight-conversion': typeof WeightConversionRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/age-and-date-convertors': typeof AgeAndDateConvertorsRoute
  '/area-conversion': typeof AreaConversionRoute
  '/bmi-calculation': typeof BmiCalculationRoute
  '/data-storage-conversion': typeof DataStorageConversionRoute
  '/length-conversion': typeof LengthConversionRoute
  '/password-generator': typeof PasswordGeneratorRoute
  '/shoe-size-conversion': typeof ShoeSizeConversionRoute
  '/speed-conversion': typeof SpeedConversionRoute
  '/tax-calculation': typeof TaxCalculationRoute
  '/tempratur-conversion': typeof TempraturConversionRoute
  '/time-conversion': typeof TimeConversionRoute
  '/weight-conversion': typeof WeightConversionRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/age-and-date-convertors'
    | '/area-conversion'
    | '/bmi-calculation'
    | '/data-storage-conversion'
    | '/length-conversion'
    | '/password-generator'
    | '/shoe-size-conversion'
    | '/speed-conversion'
    | '/tax-calculation'
    | '/tempratur-conversion'
    | '/time-conversion'
    | '/weight-conversion'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/age-and-date-convertors'
    | '/area-conversion'
    | '/bmi-calculation'
    | '/data-storage-conversion'
    | '/length-conversion'
    | '/password-generator'
    | '/shoe-size-conversion'
    | '/speed-conversion'
    | '/tax-calculation'
    | '/tempratur-conversion'
    | '/time-conversion'
    | '/weight-conversion'
  id:
    | '__root__'
    | '/'
    | '/age-and-date-convertors'
    | '/area-conversion'
    | '/bmi-calculation'
    | '/data-storage-conversion'
    | '/length-conversion'
    | '/password-generator'
    | '/shoe-size-conversion'
    | '/speed-conversion'
    | '/tax-calculation'
    | '/tempratur-conversion'
    | '/time-conversion'
    | '/weight-conversion'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AgeAndDateConvertorsRoute: typeof AgeAndDateConvertorsRoute
  AreaConversionRoute: typeof AreaConversionRoute
  BmiCalculationRoute: typeof BmiCalculationRoute
  DataStorageConversionRoute: typeof DataStorageConversionRoute
  LengthConversionRoute: typeof LengthConversionRoute
  PasswordGeneratorRoute: typeof PasswordGeneratorRoute
  ShoeSizeConversionRoute: typeof ShoeSizeConversionRoute
  SpeedConversionRoute: typeof SpeedConversionRoute
  TaxCalculationRoute: typeof TaxCalculationRoute
  TempraturConversionRoute: typeof TempraturConversionRoute
  TimeConversionRoute: typeof TimeConversionRoute
  WeightConversionRoute: typeof WeightConversionRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/weight-conversion': {
      id: '/weight-conversion'
      path: '/weight-conversion'
      fullPath: '/weight-conversion'
      preLoaderRoute: typeof WeightConversionRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/time-conversion': {
      id: '/time-conversion'
      path: '/time-conversion'
      fullPath: '/time-conversion'
      preLoaderRoute: typeof TimeConversionRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tempratur-conversion': {
      id: '/tempratur-conversion'
      path: '/tempratur-conversion'
      fullPath: '/tempratur-conversion'
      preLoaderRoute: typeof TempraturConversionRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tax-calculation': {
      id: '/tax-calculation'
      path: '/tax-calculation'
      fullPath: '/tax-calculation'
      preLoaderRoute: typeof TaxCalculationRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/speed-conversion': {
      id: '/speed-conversion'
      path: '/speed-conversion'
      fullPath: '/speed-conversion'
      preLoaderRoute: typeof SpeedConversionRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/shoe-size-conversion': {
      id: '/shoe-size-conversion'
      path: '/shoe-size-conversion'
      fullPath: '/shoe-size-conversion'
      preLoaderRoute: typeof ShoeSizeConversionRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/password-generator': {
      id: '/password-generator'
      path: '/password-generator'
      fullPath: '/password-generator'
      preLoaderRoute: typeof PasswordGeneratorRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/length-conversion': {
      id: '/length-conversion'
      path: '/length-conversion'
      fullPath: '/length-conversion'
      preLoaderRoute: typeof LengthConversionRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/data-storage-conversion': {
      id: '/data-storage-conversion'
      path: '/data-storage-conversion'
      fullPath: '/data-storage-conversion'
      preLoaderRoute: typeof DataStorageConversionRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/bmi-calculation': {
      id: '/bmi-calculation'
      path: '/bmi-calculation'
      fullPath: '/bmi-calculation'
      preLoaderRoute: typeof BmiCalculationRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/area-conversion': {
      id: '/area-conversion'
      path: '/area-conversion'
      fullPath: '/area-conversion'
      preLoaderRoute: typeof AreaConversionRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/age-and-date-convertors': {
      id: '/age-and-date-convertors'
      path: '/age-and-date-convertors'
      fullPath: '/age-and-date-convertors'
      preLoaderRoute: typeof AgeAndDateConvertorsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AgeAndDateConvertorsRoute: AgeAndDateConvertorsRoute,
  AreaConversionRoute: AreaConversionRoute,
  BmiCalculationRoute: BmiCalculationRoute,
  DataStorageConversionRoute: DataStorageConversionRoute,
  LengthConversionRoute: LengthConversionRoute,
  PasswordGeneratorRoute: PasswordGeneratorRoute,
  ShoeSizeConversionRoute: ShoeSizeConversionRoute,
  SpeedConversionRoute: SpeedConversionRoute,
  TaxCalculationRoute: TaxCalculationRoute,
  TempraturConversionRoute: TempraturConversionRoute,
  TimeConversionRoute: TimeConversionRoute,
  WeightConversionRoute: WeightConversionRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
